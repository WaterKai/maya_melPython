//Title: 	dwBlendByReverse
//Author: 	David Walden
//		www.davidwalden.com
//		dwalden74@hotmail.com
//
//Date: 	December 2002
//
//Description: Procedure creates a 0-1 weighted blend attribute on a control object which is used to blend the 2 weights of a constraint node.
//Could be improved to control multiple attributes ($controlObject.$blendAttribute could be driving multiple attributes).
//For now, run the procedure once for each attribute that is controlled.

global proc dwBlendByReverse (string $controlObject, 
				string $blendAttribute, 
				string $reverseNodeName, 
				string $constraintNodeAttributeOne, 
				string $constraintNodeAttributeZero, 
				float $setAttrValue)
{
if (! `attributeExists $blendAttribute $controlObject`)
	{
	addAttr -longName $blendAttribute -at double -min 0 -max 1 -defaultValue $setAttrValue -keyable 1 $controlObject;
	}

if (! `objExists $reverseNodeName`)
	{
	string $reverseNode = `shadingNode -asUtility -n $reverseNodeName reverse`;
	}

if (! `isConnected ($controlObject + "." + $blendAttribute) ($constraintNodeAttributeOne)`)
	{
	connectAttr ($controlObject + "." + $blendAttribute) ($constraintNodeAttributeOne);
	}

if (! `isConnected ($controlObject + "." + $blendAttribute) ($reverseNodeName + ".inputX")`)
	{
	connectAttr ($controlObject + "." + $blendAttribute) ($reverseNodeName + ".inputX");
	}

if (! `isConnected ($reverseNodeName + ".outputX") ($constraintNodeAttributeZero)`)
	{
	connectAttr ($reverseNodeName + ".outputX") ($constraintNodeAttributeZero);
	}
}